[project]
name = "pixachu"
version = "0.0.1"
description = ""
authors = [
    {name = "Raphael Tang",email = "tang.raphael@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.13,<4"
dependencies = [
    "text2pic4ai (>=0.0.1,<0.0.2)",
    "torch (>=2.7.0,<3.0.0)",
    "torchvision (>=0.22.0,<0.23.0)",
    "torchaudio (>=2.7.0,<3.0.0)",
    "transformers (>=4.51.3,<5.0.0)",
    "accelerate (>=1.6.0,<2.0.0)",
    "peft (>=0.15.2,<0.16.0)",
    "datasets (>=3.6.0,<4.0.0)",
    "pydantic (>=2.11.4,<3.0.0)",
    "ruff (>=0.11.9,<0.12.0)",
    "pydantic-settings (>=2.9.1,<3.0.0)",
    "pre-commit (>=4.2.0,<5.0.0)"
]
package-mode = true

[tool.ruff]
# The directories to consider when resolving first- vs. third-party imports
src = ["unigeo"]

exclude = [
    "unigeo/db/alembic/versions/*",
    "tmp/",
    "notebooks/",
]

line-length = 120
indent-width = 4

[tool.ruff.lint.per-file-ignores]
# ignore star and unused imports
"__init__.py" = ["F403", "F405"]

[tool.ruff.lint]
select = [
    # flake8-bugbear
    "B",
    # pycodestyle error
    "E",
    # pyflakes
    "F",
    # isort
    "I",
    # pyupgrade
    "UP",
    # pycodestyle warning
    "W",
]

# Rule codes to ignore.
ignore = ["E501", "F841", "E722", "E741"]  # ignore line too long, unused vars, and bare except

[[tool.poetry.source]]
name = "torch"
url = "https://download.pytorch.org/whl/cu118"
priority = "supplemental"

[tool.poetry]
packages = [
    { include = "pixachu" },
]

[tool.poetry.scripts]
post-install = "pixachu.cli.post_install:main"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
# Allows fix for all enabled rules when `--fix` is provided
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes, indent with spaces, and respect trailing commas
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
order-by-type = true
no-lines-before = ["future", "standard-library"]